const TELEGRAM_BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID;

export const sendTelegramNotification = async (orderData) => {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.warn('Telegram configuration missing');
    return;
  }

  const message = `
üîî ƒê∆†N H√ÄNG M·ªöI!

üë§ Kh√°ch h√†ng: ${orderData.customerInfo.name}
üìû SƒêT: ${orderData.customerInfo.phone}
üìç ƒê·ªãa ch·ªâ: ${orderData.customerInfo.address}

üõçÔ∏è ƒê∆°n h√†ng:
${orderData.items.map(item => 
  `‚Ä¢ ${item.name} x1 - ${item.total.toLocaleString()}ƒë
  ${item.toppings.length > 0 ? `  Topping: ${item.toppings.map(t => t.name).join(', ')}\n` : ''}  ƒê∆∞·ªùng: ${item.sugar} | ƒê√°: ${item.ice}
  ${item.note ? `  Ghi ch√∫: ${item.note}\n` : ''}`
).join('\n')}

üí∞ T·ªïng c·ªông: ${orderData.total.toLocaleString()}ƒë
‚è∞ Th·ªùi gian: ${new Date().toLocaleString('vi-VN')}
üì± ID ƒë∆°n h√†ng: #${orderData.id}
  `;

  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      })
    });

    if (!response.ok) {
      throw new Error('Failed to send telegram message');
    }

    console.log('Telegram notification sent successfully');
  } catch (error) {
    console.error('Error sending Telegram notification:', error);
  }
};